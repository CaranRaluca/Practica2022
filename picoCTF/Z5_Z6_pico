Ziua 5 : 22.06.2022

#Obedient Cat
picoCTF{s4n1ty_v3r1f13d_f28ac910}



#MOD 26
#ROT 13 decoder
picoCTF{next_time_I'll_try_2_rounds_of_rot13_aFxtzQWR}


#Wave a flag
caran_raluca@caran:~$ wget https://mercury.picoctf.net/static/b28b6021d6040b086c2226ebeb913bc2/warm
caran_raluca@caran:~$ chmod +x warm
caran_raluca@caran:~$ ./warm
Hello user! Pass me a -h to learn what I can do!
caran_raluca@caran:~$ ./warm -h
Oh, help? I actually don't do much, but I do have this flag here: picoCTF{b1scu1ts_4nd_gr4vy_d6969390}




#WARMED UP
Flag-ul este: picoCTF{61}



#Python Wrangling
Am descarcat scriptul, parola si flag-ul.
wget-utilitar pentru a descarca fisiere de pe Internet
caran_raluca@caran:~$ wget https://mercury.picoctf.net/static/0bf545252b5120845e3b568b9ad0277e/ende.py
caran_raluca@caran:~$ python3 ende.py -d flag.txt.en
Please enter the password:6008014f6008014f6008014f6008014f
picoCTF{4p0110_1n_7h3_h0us3_6008014f}



#Information
caran_raluca@caran:~$ file cat.jpg
cat.jpg: JPEG image data, JFIF standard 1.02, aspect ratio, density 1x1, segment length 16, baseline, precision 8, 2560x1598, components 3
caran_raluca@caran:~$ exiftool cat.jpg
Campul License pare codificat in baza64.
caran_raluca@caran:~$ echo "cGljb0NURnt0aGVfbTN0YWRhdGFfMXNfbW9kaWZpZWR9" | base64 -d
picoCTF{the_m3tadata_1s_modified}



#Cookies
Am folosit extensia Tamper Data. Am modificat campul Cookie. Am observat ca se afiseaza de fiecare data alt cookie. Valoarea 18 mi-a oferit flag-ul.
Flag: picoCTF{3v3ry1_l0v3s_c00k135_94190c8a}.


#Nice netcat...
caran_raluca@caran:~$  nc mercury.picoctf.net 22342
Transform numerele afisate in caractere ASCII.
picoCTF{g00d_k1tty!_n1c3_k1tty!_5fb5e51d}


#Tab, Tab, Attack
Am descarcat arhiva.
caran_raluca@caran:~$ unzip Addadshashanammu
caran_raluca@caran:~$ Addadshashanammu/Almurbalarammi/Ashalmimilkala/Assurnabitashpi/Maelkashishi/Onnissiralis/Ularradallaku/fang-of-haynekhtnamet
*ZAP!* picoCTF{l3v3l_up!_t4k3_4_r35t!_f3553887}




#2WARM
picoCTF{101010}



#The Numbers
Fiecare numar din imagine are echivalent o litera din alfabet.
PICOCTF{THENUMBERSMASON}




#Easy1
Vigenere Cipher cu cheia SOLVECRYPTO. M-am ajutat de site-ul https://www.dcode.fr/vigenere-cipher.
Flag-ul generat: picoCTF{CRYPTOISFUN}.



#13
13ROT cipher
picoCTF{not_too_bad_of_a_problem}



#Caesar
Am folosit un decodificator Cesar online unde am luat prin incercari valorile cheii. Plaintextul fusese shiftat cu 4 pozitii.
Flag: picoCTF{crossingtherubicondjneoach}



#Insp3ct0r
Am inspectat site-ul. Cele 3 parti le-am gasit in Inspector,Debugger si Syle Editor.
picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?2e7b23e3}



#what's a net cat?
caran_raluca@caran:~$ nc jupiter.challenges.picoctf.org 41120
You're on your way to becoming the net cat master
picoCTF{nEtCat_Mast3ry_3214be47}.



#Static ain't always noise
caran_raluca@caran:~/Downloads$ bash ltdis.sh  static
Attempting disassembly of static ...
Disassembly successful! Available at: static.ltdis.x86_64.txt
Ripping strings from binary with file offsets...
Any strings found in static have been written to static.ltdis.strings.txt with file offset
caran_raluca@caran:~/Downloads$ cat static.ltdis.strings.txt
....
 1020 picoCTF{d15a5m_t34s3r_98d35619}
......



#strings it
caran_raluca@caran:~$ strings strings  | egrep "pico"
picoCTF{5tRIng5_1T_7f766a23}



#First Grep
caran_raluca@caran:~/Downloads$ egrep "pico" file
picoCTF{grep_is_good_to_find_things_5af9d829}



#Scavenger Hunt
Here's the first part of the flag: picoCTF{t
/* CSS makes the page look nice, and yes, it also has part of the flag. Here's part 2: h4ts_4_l0 */
/* How can I keep Google from indexing my website? */ - Accesez site-ul http://mercury.picoctf.net:27393/robots.txt.
User-agent: *
Disallow: /index.html
# Part 3: t_0f_pl4c
# I think this is an apache server... can you Access the next flag?
Accesez site-ul : http://mercury.picoctf.net:27393/.htaccess
# Part 4: 3s_2_lO0k
# I love making websites on my Mac, I can Store a lot of information there.
Accesez site-ul : http://mercury.picoctf.net:27393/.DS_Store. -DS_STore este un fisier special MAC care memoreaza informatii despre folderul curent.
Congrats! You completed the scavenger hunt. Part 5: _d375c750}
Flag-ul este : picoCTF{th4ts_4_l0t_0f_pl4c3s_2_lO0k_d375c750}.



#PW Crack 1
Am inspectat continutul scriptului dat. Parola 8713 genereaza flag-ul.
caran_raluca@caran:~/Downloads$ python3 ./level1.py
Please enter correct password for flag: 8713
Welcome back... your flag, user:
picoCTF{545h_r1ng1ng_1b2fd683}



#PW Crack 2
Verific continutul scriptului. Observ ca parola corecta este comparata cu rezultatul sumei: chr(0x64) + chr(0x65) + chr(0x37) + chr(0x36). chr(x)-functie care returneaza caracterul specific valorii ASCII
Cu ajutorul tabelei ASCII am obtinut parola : de76
caran_raluca@caran:~/Downloads$ python3 ./level2.py
Please enter correct password for flag: de76
Welcome back... your flag, user:
picoCTF{tr45h_51ng1ng_489dea9a}.



#Serpentine
Am analizat scriptul . Am adaugat urmatoarea linie de cod: print_flag().
Am obtinut flag-ul : picoCTF{7h3_r04d_l355_7r4v3l3d_8e47d128}.



#mus1c
HINT:Do you think you can master rockstar?
Rockstar - Rockstar is a dynamically typed Turing-complete programming language designed for creating computer programs that are also song lyrics.
Am pus continutul fisierului lyrics.txt intr-un Rockstar decoder.Mi-a fost generata o lista de numere. Fiecare nr reprezinta un caracter ASCII. Am obtinut flag-ul : picoCTF{rrrocknrn0113r}




#Where are the robots?
HINT evident.
Accesez site-ul https://jupiter.challenges.picoctf.org/problem/56830/1bb4c.html.
Mesaj afisat: User-agent: *
Disallow: /1bb4c.html
Accesez site-ul https://jupiter.challenges.picoctf.org/problem/56830/1bb4c.html.
Flag-ul gasit: picoCTF{ca1cu1at1ng_Mach1n3s_1bb4c} .



#Vigenere
Am folosit un decodificator Vigenere online, ajutandu-ma de cheie.
Falg-ul: picoCTF{D0NT_US3_V1G3N3R3_C1PH3R_ae82272q}




#Glitch Cat
caran_raluca@caran:~$ nc saturn.picoctf.net 65353
'picoCTF{gl17ch_m3_n07_' + chr(0x39) + chr(0x63) + chr(0x34) + chr(0x32) + chr(0x61) + chr(0x34) + chr(0x35) + chr(0x64) + '}'
picoCTF{gl17ch_m3_n07_9c42a45d}



#Glory of the Garden
caran_raluca@caran:~/Downloads$ strings garden.jpg | egrep "pico"
Here is a flag "picoCTF{more_than_m33ts_the_3y33dd2eEF5}"








Ziua 6 : 23.06.2022
#Who are you?(N)
Folosesc extensia Tamper Data. Inlocuiesc campul UserAgent cu "PicoBrowser".
Imi este afisat mesajul: I don't trust users visiting from another site. Modific campul Referer:http://mercury.picoctf.net:52362/.


#Get AHead(N)
Folosind extensia Tamper Data: Observ ca metoda folosita pentru rosu este HEAD, iar pentru albastru este POST.



#PlayNice
M-am ajutat de un decodificator PlayFair online.
caran_raluca@caran:~$ nc mercury.picoctf.net 19354
Here is the alphabet: n5vgru7ehz1klja8s9340m2wcxbd6pqfitoy
Here is the encrypted message: hnjm2e4t51v16gsg104i4oi9wmrqli
What is the plaintext message? 7v8441mfrerhdr8rh20f2fya20noaq
Congratulations! Here's the flag: dbc8bf9bae7152d35d3c200c46a0fa30



#Tapping
Trebuie sa traduc un mesaj in codul Morse.
Flag-ul obtinut:PICOCTF{M0RS3C0D31SFUN1261438181}



#La cifra de
Am introdus ciphertext-ul intr-un program de decodificare a codurilor Vigenere, care nu solicita cheia de criptare. (https://www.guballa.de/vigenere-solver)
"It is interesting how in history people often receive credit for things they did not create
During the course of history, the Vigenère Cipher has been reinvented many times
It was falsely attributed to Blaise de Vigenère as it was originally described in 1553 by Giovan Battista Bellaso in his book La cifra del. Sig. Giovan Battista Bellaso
For the implementation of this cipher a table is formed by sliding the lower half of an ordinary alphabet for an apparently random number of places with respect to the upper halfpicoCTF{b311a50_0r_v1gn3r3_c1ph3r6fe60eaa}
The first well-documented description of a polyalphabetic cipher however, was made around 1467 by Leon Battista Alberti.
The Vigenère Cipher is therefore sometimes called the Alberti Disc or Alberti Cipher.
In 1508, Johannes Trithemius invented the so-called tabula recta (a matrix of shifted alphabets) that would later be a critical component of the Vigenère Cipher.
Bellaso’s second booklet appeared in 1555 as a continuation of the first. The lower halves of the alphabets are now shifted regularly, but the alphabets and the index letters are mixed by means of a mnemonic key phrase, which can be different with each correspondent."
Flag-ul este: picoCTF{b311a50_0r_v1gn3r3_c1ph3r6fe60eaa}.




#Flags
Steagurile afisate in imagine reprezinta steaguri internationale maritime folosite pentru comunicarea intre nave. Fiecare flag are asociat un caracter si o semnificatie. (https://en.wikipedia.org/wiki/International_maritime_signal_flags)
Flag-ul este: PICOCTF{F1AG5AND5TUFF}.



#Mr-Worldwide
Flag-ul contine niste coordonate. Am introdus coordonatele respective pe google maps. Am gasit locatiile:Kyoto, Odesa, Dayton ,Instanbul,Abu Dhabi, Kuala Lumpur, Addis Abeba, Loja, Amsterdam, Sleepy Hallow ,Kodiak , Alexandria.
Am luat prima litera a fiecarei locatii si am obtinut flag-ul : picoCTF{KODIAK_ALASKA}.



#basic-mod1
Am calculator restul impartirii la 37 a numerelor din fisier si am asociat fiecarui rest obtinut caracterul potrivit.
Flag-ul obtinut:picoCTF{r0und_n_r0und_79c18fb3}



#Codebook
caran_raluca@caran:~/Downloads$ chmod +x code.py
caran_raluca@caran:~/Downloads$ python3 code.py
picoCTF{c0d3b00k_455157_d9aa2df2}



#convertme.py
caran_raluca@caran:~/Downloads$ chmod +x convertme.py
caran_raluca@caran:~/Downloads$ python3 convertme.py
If 81 is in decimal base, what is it in binary base?
Answer: 1010001
That is correct! Here's your flag: picoCTF{4ll_y0ur_b4535_722f6b39}



#fixme1.py
caran_raluca@caran:~/Downloads$ gedit fixme1.py
caran_raluca@caran:~/Downloads$ python3 fixme1.py
That is correct! Here's your flag: picoCTF{1nd3nt1ty_cr1515_6a476c8f}



#fixme2.py
caran_raluca@caran:~/Downloads$ gedit fixme2.py
caran_raluca@caran:~/Downloads$ python3 fixme2.py
That is correct! Here's your flag: picoCTF{3qu4l1ty_n0t_4551gnm3nt_4863e11b}



#HashingJobApp
Am folosit site-ul: http://www.md5.cz/.
caran_raluca@caran:~/Downloads$ nc saturn.picoctf.net 54555
Please md5 hash the text between quotes, excluding the quotes: 'babies'
Answer:
8374d0764f1466e601c624254222ad53
8374d0764f1466e601c624254222ad53
Correct.
Please md5 hash the text between quotes, excluding the quotes: 'Japan'
Answer:
53a577bb3bc587b0c28ab808390f1c9b
53a577bb3bc587b0c28ab808390f1c9b
Correct.
Please md5 hash the text between quotes, excluding the quotes: 'kilts'
Answer:
64cb30b3223e083fa0a2dad43fae9a0e
64cb30b3223e083fa0a2dad43fae9a0e
Correct.
picoCTF{4ppl1c4710n_r3c31v3d_674c1de2}



#runme.py
caran_raluca@caran:~/Downloads$ chmod u+x runme.py
caran_raluca@caran:~/Downloads$ ./runme.py
picoCTF{run_s4n1ty_run}



#level3.py
caran_raluca@caran:~/Downloads$ python3 level3.py
Please enter correct password for flag: 1ea2
Welcome back... your flag, user:
picoCTF{m45h_fl1ng1ng_6f98a49f}



#PW Crack 4
Pentru a incerca variantele de parola sugerate am modificat codul astfel:
    for user_pw in pos_pw_list:
        #user_pw = input("Please enter correct password for flag: ")
        user_pw_hash = hash_pw(user_pw)
        if( user_pw_hash == correct_pw_hash ):
            print("Welcome back... your flag, user:")
            decryption = str_xor(flag_enc.decode(), user_pw)
            print(decryption)
            return
        print("That password is incorrect")
Flag-ul obtinut dupa rularea scriptului: picoCTF{fl45h_5pr1ng1ng_ae0fb77c}



#PW Crack 5
Am modificat codul astfel:
def level_5_pw_check():
    #user_pw = input("Please enter correct password for flag: ")
    f=open("dictionary.txt","r")
    for x in f:
        user_pw=x.strip("\n")
        user_pw_hash = hash_pw(user_pw)

        if( user_pw_hash == correct_pw_hash ):
            print("Welcome back... your flag, user:")
            decryption = str_xor(flag_enc.decode(), user_pw)
            print(decryption)
            return
        print("That password is incorrect")
Flag-ul obtinut dupa rulare: picoCTF{h45h_sl1ng1ng_fffcda23} .



#dont-use-client-side
Am gasit urmatoarea functie de verificare Inspector, pe baza careia am construit flag-ul:
  function verify() {
    checkpass = document.getElementById("pass").value;
    split = 4;
    if (checkpass.substring(0, split) == 'pico') {
      if (checkpass.substring(split*6, split*7) == '706c') {
        if (checkpass.substring(split, split*2) == 'CTF{') {
         if (checkpass.substring(split*4, split*5) == 'ts_p') {
          if (checkpass.substring(split*3, split*4) == 'lien') {
            if (checkpass.substring(split*5, split*6) == 'lz_b') {
              if (checkpass.substring(split*2, split*3) == 'no_c') {
                if (checkpass.substring(split*7, split*8) == '5}') {
                  alert("Password Verified")
                  }
                }
              }

            }
          }
        }
      }
    }
    else {
      alert("Incorrect password");
    }
  }
Flag-ul obtinut: picoCTF{no_clients_plz_b706c5}.



#It is my Birthday
Am gasit pe urmatorul site 2 fisiere cu acelasi hash MD5: https://www.mathstat.dal.ca/~selinger/md5collision/. (erase, hello)
Le-am transformat in pdf-uri, le-am incarcat pe site si am obtinut un cod sursa.
Am obtinut urmatorul FLAG: picoCTF{c0ngr4ts_u_r_1nv1t3d_da36cc1b}.




#Login
Codul sursa:
(async()=>{await new Promise((e=>window.addEventListener("load",e))),document.querySelector("form").addEventListener("submit",(e=>{e.preventDefault();const r={u:"input[name=username]",p:"input[name=password]"},t={};for(const e in r)t[e]=btoa(document.querySelector(r[e]).value).replace(/=/g,"");return"YWRtaW4"!==t.u?alert("Incorrect Username"):"cGljb0NURns1M3J2M3JfNTNydjNyXzUzcnYzcl81M3J2M3JfNTNydjNyfQ"!==t.p?alert("Incorrect Password"):void alert(`Correct Password! Your flag is ${atob(t.p)}.`)}))})();
Flag-ul va fi obtinut prin decodificarea in baza64 a string-ului: cGljb0NURns1M3J2M3JfNTNydjNyXzUzcnYzcl81M3J2M3JfNTNydjNyfQ .
picoCTF{53rv3r_53rv3r_53rv3r_53rv3r_53rv3r}



#Includes
picoCTF{1nclu51v17y_1of2_f7w_2of2_df589022}



#Inspect HTML
picoCTF{1n5p3t0r_0f_h7ml_1fd8425b}




#Local Authority
function checkPassword(username, password)
{
  if( username === 'admin' && password === 'strongPassword098765' )
  {
    return true;
  }
  else
  {
    return false;
  }
}
picoCTF{j5_15_7r4n5p4r3n7_a8788e61}



#picobrowser
Am schimbat UseAgent-ul in PicoBrowser.
Flag: picoCTF{p1c0_s3cr3t_ag3nt_84f9c865}



#Client-side-again(N)
Am cautat un JavaScript Deobfuscator online. Am introdus urmatoarea parte de cod gasita in Inspector:
  var _0x5a46=['f49bf}','_again_e','this','Password\x20Verified','Incorrect\x20password','getElementById','value','substring','picoCTF{','not_this'];(function(_0x4bd822,_0x2bd6f7){var _0xb4bdb3=function(_0x1d68f6){while(--_0x1d68f6){_0x4bd822['push'](_0x4bd822['shift']());}};_0xb4bdb3(++_0x2bd6f7);}(_0x5a46,0x1b3));var _0x4b5b=function(_0x2d8f05,_0x4b81bb){_0x2d8f05=_0x2d8f05-0x0;var _0x4d74cb=_0x5a46[_0x2d8f05];return _0x4d74cb;};function verify(){checkpass=document[_0x4b5b('0x0')]('pass')[_0x4b5b('0x1')];split=0x4;if(checkpass[_0x4b5b('0x2')](0x0,split*0x2)==_0x4b5b('0x3')){if(checkpass[_0x4b5b('0x2')](0x7,0x9)=='{n'){if(checkpass[_0x4b5b('0x2')](split*0x2,split*0x2*0x2)==_0x4b5b('0x4')){if(checkpass[_0x4b5b('0x2')](0x3,0x6)=='oCT'){if(checkpass[_0x4b5b('0x2')](split*0x3*0x2,split*0x4*0x2)==_0x4b5b('0x5')){if(checkpass['substring'](0x6,0xb)=='F{not'){if(checkpass[_0x4b5b('0x2')](split*0x2*0x2,split*0x3*0x2)==_0x4b5b('0x6')){if(checkpass[_0x4b5b('0x2')](0xc,0x10)==_0x4b5b('0x7')){alert(_0x4b5b('0x8'));}}}}}}}}else{alert(_0x4b5b('0x9'));}}
Am obtinut urmatorul cod:
var _0x5a46 = ["f49bf}", "_again_e", "this", "Password Verified", "Incorrect password", "getElementById", "value", "substring", "picoCTF{", "not_this"];
(function (_0x4bd822, _0x2bd6f7) {
  var _0xb4bdb3 = function (_0x1d68f6) {
    while (--_0x1d68f6) {
      _0x4bd822.push(_0x4bd822.shift());
    }
  };
  _0xb4bdb3(++_0x2bd6f7);
}(_0x5a46, 435));
var _0x4b5b = function (_0x2d8f05, _0x4b81bb) {
  _0x2d8f05 = _0x2d8f05 - 0;
  var _0x4d74cb = _0x5a46[_0x2d8f05];
  return _0x4d74cb;
};
function verify() {
  checkpass = document[_0x4b5b("0x0")]("pass")[_0x4b5b("0x1")];
  split = 4;
  if (checkpass[_0x4b5b("0x2")](0, split * 2) == _0x4b5b("0x3")) {
    if (checkpass[_0x4b5b("0x2")](7, 9) == "{n") {
      if (checkpass[_0x4b5b("0x2")](split * 2, split * 2 * 2) == _0x4b5b("0x4")) {
        if (checkpass[_0x4b5b("0x2")](3, 6) == "oCT") {
          if (checkpass[_0x4b5b("0x2")](split * 3 * 2, split * 4 * 2) == _0x4b5b("0x5")) {
            if (checkpass.substring(6, 11) == "F{not") {
              if (checkpass[_0x4b5b("0x2")](split * 2 * 2, split * 3 * 2) == _0x4b5b("0x6")) {
                if (checkpass[_0x4b5b("0x2")](12, 16) == _0x4b5b("0x7")) {
                  alert(_0x4b5b("0x8"));
                }
              }
            }
          }
        }
      }
    }
  } else {
    alert(_0x4b5b("0x9"));
  }
}



#Power Cookie
Am folosit extensia Tamper Data. Am modificat campul Cookie, setand variabila Admin.
picoCTF{gr4d3_A_c00k13_5d2505be}




#vault-door-1
picoCTF{d35cr4mbl3_tH3_cH4r4cT3r5_f6daf4}



#crackme.py
Modific scriptul apeland functia : decode_secret(bezos_cc_secret).
caran_raluca@caran:~/Downloads$ python3 crackme.py
picoCTF{1|\/|_4_p34|\|ut_ef5b69a3}



#file-run2
caran_raluca@caran:~/Downloads$ chmod +x run
caran_raluca@caran:~/Downloads$ ./run Hello!
The flag is: picoCTF{F1r57_4rgum3n7_be0714da}



#GDB Test Drive
picoCTF{d3bugg3r_dr1v3_197c378a}



#patchme.py
caran_raluca@caran:~/Downloads$ python3 patchme.flag.py
Please enter correct password for flag: ak98-=90adfjhgj321sleuth9000
Welcome back... your flag, user:
picoCTF{p47ch1ng_l1f3_h4ck_c4a4688b}



#Safe Opener
Ma uit pe codul din fisierul descarcat.
caran_raluca@caran:~/Downloads$ echo "cGwzYXMzX2wzdF9tM18xbnQwX3RoM19zYWYz" | base64 -d
pl3as3_l3t_m3_1nt0_th3_saf3




#unpackme.py
caran_raluca@caran:~/Downloads$ python3 unpackme.flag.py
What's the password? a
That password is incorrect.
Ma uit in cod. Observ ca se executa functia plain.decode. Incerc sa printez rezultatul.
caran_raluca@caran:~/Downloads$ python3 unpackme.flag.py

pw = input('What\'s the password? ')

if pw == 'batteryhorse':
  print('picoCTF{175_chr157m45_5274ff21}')
else:
  print('That password is incorrect.')



#Wireshark doo dooo do doo
Am deschis captura. Click dreapta->Follow TCP stream.
Am gasit urmatoarea secventa intr-unul dintre segmentele transmise: Gur synt vf cvpbPGS{c33xno00_1_f33_h_qrnqorrs}. Flag-ul este criptat. Folosesc un ROT13 decoder online.
Flag-ul este: The flag is picoCTF{p33kab00_1_s33_u_deadbeef}.



#Shark on WIRE 1
picoCTF{StaT31355_636f6e6e}




#shark on wire 2
Follow UDP Stream
Am gasit string-ul start (stream-ul 32) si string-ul end ( stream-ul 60 ). Majoritatea pachetelor transmise au adresa ip sursa:10.0.0.6. Fac o filtrare dupa aceasta adresa. Toate pachetele obtinute in urma filtrarii au aceeasi lungime, acelasi ip dest, iar portul de forma 5xyz. Iau ultimele 3 cifre ale fiecarui port si verific echivalentul nr in tabela ASCII.
picoCTF{p1LLf3r3d_data_v1a_st3g0}
